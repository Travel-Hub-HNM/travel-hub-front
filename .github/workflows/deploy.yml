name: Deploy to Oracle Server

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'pnpm'

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Build project
              run: pnpm start:build
              env:
                  NEXT_TELEMETRY_DISABLED: 1

            - name: Deploy to Oracle Server
              env:
                  HOST: ${{ secrets.ORACLE_HOST }}
                  USERNAME: ${{ secrets.ORACLE_USERNAME }}
                  SSH_KEY: ${{ secrets.ORACLE_SSH_KEY }}
                  DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
                  NODE_ENV: production
              run: |
                  # Setup SSH
                  mkdir -p ~/.ssh
                  echo "${SSH_KEY}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan -H ${HOST} >> ~/.ssh/known_hosts

                  # Create deployment package
                  tar -czf deploy.tar.gz .next public package.json pnpm-lock.yaml next.config.js

                  # Transfer and deploy
                  scp -i ~/.ssh/id_rsa deploy.tar.gz ${USERNAME}@${HOST}:${DEPLOY_PATH}
                  ssh -i ~/.ssh/id_rsa ${USERNAME}@${HOST} "
                    cd ${DEPLOY_PATH} && \
                    [ -d ./backup ] || mkdir backup && \
                    [ -d ./app ] && tar -czf backup/backup-\$(date +%Y%m%d_%H%M%S).tar.gz app || true && \
                    rm -rf app && mkdir app && \
                    tar -xzf deploy.tar.gz -C app && \
                    cd app && \
                    export PATH="${DEPLOY_PATH}/.local/share/pnpm:$PATH" && \
                    pnpm install --prod --frozen-lockfile && \
                    pm2 stop travel-hub-front || true && \
                    pm2 start pnpm --name 'travel-hub-front' -- start:prod && \
                    pm2 save
                  "

                  # Cleanup
                  rm -f ~/.ssh/id_rsa deploy.tar.gz
