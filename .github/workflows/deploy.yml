name: Deploy to Oracle Server

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '22'

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install dependencies
              run: pnpm install

            - name: Build project
              run: pnpm start:build

            - name: Deploy to Oracle Server
              env:
                  HOST: ${{ secrets.ORACLE_HOST }}
                  USERNAME: ${{ secrets.ORACLE_USERNAME }}
                  SSH_KEY: ${{ secrets.ORACLE_SSH_KEY }}
              run: |
                  # SSH 키 저장 및 권한 설정
                  mkdir -p ~/.ssh
                  echo "${SSH_KEY}" > ~/.ssh/id_rsa  
                  chmod 600 ~/.ssh/id_rsa

                  # 원격 서버에 배포 디렉토리 생성
                  ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${USERNAME}@${HOST} "mkdir -p /home/${USERNAME}/app"

                  # 필요한 파일만 서버로 전송
                  rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./.next/ ${USERNAME}@${HOST}:/home/${USERNAME}/app/.next/
                  rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" package.json pnpm-lock.yaml ${USERNAME}@${HOST}:/home/${USERNAME}/app/

                  # public 폴더가 있다면 전송
                  if [ -d "public" ]; then
                    rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./public/ ${USERNAME}@${HOST}:/home/${USERNAME}/app/public/
                  fi

                  # 서버에서 직접 프로덕션 의존성 설치 (node_modules 전송 대신)
                  ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${USERNAME}@${HOST} "cd /home/${USERNAME}/app && pnpm install --omit=dev"

                  # 서버에서 애플리케이션 재시작 (PM2 사용 예시)
                  ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${USERNAME}@${HOST} "cd /home/${USERNAME}/app && pm2 restart nextjs || pm2 start npm --name 'nextjs' -- start"

                  # 보안상 키 삭제
                  rm -f ~/.ssh/id_rsa
